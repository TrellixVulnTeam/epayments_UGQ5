"""empty message

Revision ID: 18fce9744879
Revises: None
Create Date: 2017-05-05 15:04:53.657784

"""

# revision identifiers, used by Alembic.
revision = '18fce9744879'
down_revision = None

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('orders',
    sa.Column('order_no', sa.String(length=64), nullable=True),
    sa.Column('sub_order_no', sa.BigInteger(), nullable=False),
    sa.Column('date_submitted', sa.DateTime(), nullable=True),
    sa.Column('date_received', sa.DateTime(), nullable=True),
    sa.Column('billing_name', sa.String(length=64), nullable=True),
    sa.Column('customer_email', sa.String(length=64), nullable=True),
    sa.Column('confirmation_message', sa.Text(), nullable=True),
    sa.Column('client_data', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('sub_order_no')
    )
    op.create_table('shipping',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('address_line_1', sa.String(length=64), nullable=True),
    sa.Column('address_line_2', sa.String(length=64), nullable=True),
    sa.Column('city', sa.String(length=64), nullable=True),
    sa.Column('state', sa.String(length=64), nullable=True),
    sa.Column('zip_code', sa.String(length=64), nullable=True),
    sa.Column('country', sa.String(length=64), nullable=True),
    sa.Column('phone', sa.String(length=64), nullable=True),
    sa.Column('instructions', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('birthCert',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('certificate_no', sa.String(length=40), nullable=True),
    sa.Column('first_name', sa.String(length=40), nullable=True),
    sa.Column('last_name', sa.String(length=25), nullable=True),
    sa.Column('mid_name', sa.String(length=40), nullable=True),
    sa.Column('gender_type', sa.Enum('not_known', 'Male', 'Female', name='gender_type'), nullable=True),
    sa.Column('father_name', sa.String(length=40), nullable=True),
    sa.Column('mother_name', sa.String(length=40), nullable=True),
    sa.Column('relationship', sa.String(length=30), nullable=True),
    sa.Column('purpose', sa.Enum('Genealogical/Historical', 'Personal Use', 'Legal', 'Immigration', 'Medicaid/Social Security', 'Health', 'Other', name='purpose'), nullable=True),
    sa.Column('additional_copy', sa.String(length=40), nullable=True),
    sa.Column('month', sa.String(length=20), nullable=True),
    sa.Column('day', sa.String(length=2), nullable=True),
    sa.Column('years', postgresql.ARRAY(sa.String(length=4), dimensions=1), nullable=True),
    sa.Column('birth_place', sa.String(length=40), nullable=True),
    sa.Column('borough', postgresql.ARRAY(sa.String(length=20), dimensions=1), nullable=True),
    sa.Column('letter', sa.Boolean(), nullable=True),
    sa.Column('comment', sa.String(length=255), nullable=True),
    sa.Column('sub_order_no', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['sub_order_no'], ['orders.sub_order_no'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('birthSearch',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=40), nullable=True),
    sa.Column('last_name', sa.String(length=25), nullable=True),
    sa.Column('mid_name', sa.String(length=40), nullable=True),
    sa.Column('gender_type', sa.Enum('not_known', 'Male', 'Female', name='gender_type'), nullable=True),
    sa.Column('father_name', sa.String(length=40), nullable=True),
    sa.Column('mother_name', sa.String(length=40), nullable=True),
    sa.Column('relationship', sa.String(length=30), nullable=True),
    sa.Column('purpose', sa.Enum('Genealogical/Historical', 'Personal Use', 'Legal', 'Immigration', 'Medicaid/Social Security', 'Health', 'Other', name='purpose'), nullable=True),
    sa.Column('additional_copy', sa.String(length=4), nullable=True),
    sa.Column('month', sa.String(length=20), nullable=True),
    sa.Column('day', sa.String(length=2), nullable=True),
    sa.Column('years', postgresql.ARRAY(sa.String(length=4), dimensions=1), nullable=True),
    sa.Column('birth_place', sa.String(length=40), nullable=True),
    sa.Column('borough', postgresql.ARRAY(sa.String(length=20), dimensions=1), nullable=True),
    sa.Column('letter', sa.Boolean(), nullable=True),
    sa.Column('comment', sa.String(length=255), nullable=True),
    sa.Column('sub_order_no', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['sub_order_no'], ['orders.sub_order_no'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('deathCert',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('certificate_no', sa.String(length=40), nullable=True),
    sa.Column('last_name', sa.String(length=25), nullable=True),
    sa.Column('first_name', sa.String(length=40), nullable=True),
    sa.Column('mid_name', sa.String(length=40), nullable=True),
    sa.Column('relationship', sa.String(length=30), nullable=True),
    sa.Column('purpose', sa.Enum('Genealogical/Historical', 'Personal Use', 'Legal', 'Immigration', 'Medicaid/Social Security', 'Health', 'Other', name='purpose'), nullable=True),
    sa.Column('copy_req', sa.String(length=40), nullable=True),
    sa.Column('cemetery', sa.String(length=40), nullable=True),
    sa.Column('month', sa.String(length=20), nullable=True),
    sa.Column('day', sa.String(length=2), nullable=True),
    sa.Column('years', postgresql.ARRAY(sa.String(length=4), dimensions=1), nullable=True),
    sa.Column('death_place', sa.String(length=40), nullable=True),
    sa.Column('age_of_death', sa.String(length=3), nullable=True),
    sa.Column('borough', postgresql.ARRAY(sa.String(length=20), dimensions=1), nullable=True),
    sa.Column('letter', sa.Boolean(), nullable=True),
    sa.Column('comment', sa.String(length=255), nullable=True),
    sa.Column('sub_order_no', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['sub_order_no'], ['orders.sub_order_no'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('deathSearch',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('last_name', sa.String(length=25), nullable=True),
    sa.Column('first_name', sa.String(length=40), nullable=True),
    sa.Column('mid_name', sa.String(length=40), nullable=True),
    sa.Column('relationship', sa.String(length=30), nullable=True),
    sa.Column('purpose', sa.Enum('Genealogical/Historical', 'Personal Use', 'Legal', 'Immigration', 'Medicaid/Social Security', 'Health', 'Other', name='purpose'), nullable=True),
    sa.Column('copy_req', sa.String(length=40), nullable=True),
    sa.Column('cemetery', sa.String(length=40), nullable=True),
    sa.Column('month', sa.String(length=20), nullable=True),
    sa.Column('day', sa.String(length=2), nullable=True),
    sa.Column('years', postgresql.ARRAY(sa.String(length=4), dimensions=1), nullable=True),
    sa.Column('death_place', sa.String(length=40), nullable=True),
    sa.Column('age_of_death', sa.String(length=3), nullable=True),
    sa.Column('borough', postgresql.ARRAY(sa.String(length=20), dimensions=1), nullable=True),
    sa.Column('letter', sa.Boolean(), nullable=True),
    sa.Column('comment', sa.String(length=255), nullable=True),
    sa.Column('sub_order_no', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['sub_order_no'], ['orders.sub_order_no'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('marriageCert',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('certificate_no', sa.String(length=40), nullable=True),
    sa.Column('groom_last_name', sa.String(length=25), nullable=True),
    sa.Column('groom_first_name', sa.String(length=40), nullable=True),
    sa.Column('bride_last_name', sa.String(length=25), nullable=True),
    sa.Column('bride_first_name', sa.String(length=40), nullable=True),
    sa.Column('relationship', sa.String(length=30), nullable=True),
    sa.Column('purpose', sa.Enum('Genealogical/Historical', 'Personal Use', 'Legal', 'Immigration', 'Medicaid/Social Security', 'Health', 'Other', name='purpose'), nullable=True),
    sa.Column('copy_req', sa.String(length=40), nullable=True),
    sa.Column('month', sa.String(length=20), nullable=True),
    sa.Column('day', sa.String(length=2), nullable=True),
    sa.Column('years', postgresql.ARRAY(sa.String(length=4), dimensions=1), nullable=True),
    sa.Column('marriage_place', sa.String(length=40), nullable=True),
    sa.Column('borough', postgresql.ARRAY(sa.String(length=20), dimensions=1), nullable=True),
    sa.Column('letter', sa.Boolean(), nullable=True),
    sa.Column('comment', sa.String(length=255), nullable=True),
    sa.Column('sub_order_no', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['sub_order_no'], ['orders.sub_order_no'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('marriageSearch',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('groom_last_name', sa.String(length=25), nullable=True),
    sa.Column('groom_first_name', sa.String(length=40), nullable=True),
    sa.Column('bride_last_name', sa.String(length=25), nullable=True),
    sa.Column('bride_first_name', sa.String(length=40), nullable=True),
    sa.Column('relationship', sa.String(length=30), nullable=True),
    sa.Column('purpose', sa.Enum('Genealogical/Historical', 'Personal Use', 'Legal', 'Immigration', 'Medicaid/Social Security', 'Health', 'Other', name='purpose'), nullable=True),
    sa.Column('copy_req', sa.String(length=40), nullable=True),
    sa.Column('month', sa.String(length=20), nullable=True),
    sa.Column('day', sa.String(length=2), nullable=True),
    sa.Column('years', postgresql.ARRAY(sa.String(length=4), dimensions=1), nullable=True),
    sa.Column('marriage_place', sa.String(length=40), nullable=True),
    sa.Column('borough', postgresql.ARRAY(sa.String(length=20), dimensions=1), nullable=True),
    sa.Column('letter', sa.Boolean(), nullable=True),
    sa.Column('comment', sa.String(length=255), nullable=True),
    sa.Column('sub_order_no', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['sub_order_no'], ['orders.sub_order_no'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('photoTax',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('collection', sa.Enum('1940', '1980', 'Both', name='collection'), nullable=True),
    sa.Column('borough', sa.Enum('Bronx', 'Manhattan', 'Satan Island', 'Brooklyn', 'Queens', name='borough'), nullable=True),
    sa.Column('roll', sa.String(length=9), nullable=True),
    sa.Column('block', sa.String(length=9), nullable=True),
    sa.Column('lot', sa.String(length=9), nullable=True),
    sa.Column('street_no', sa.String(length=10), nullable=True),
    sa.Column('street', sa.String(length=40), nullable=True),
    sa.Column('description', sa.String(length=35), nullable=True),
    sa.Column('type', sa.Enum('8x10', '11x14', name='type'), nullable=True),
    sa.Column('size', sa.Enum('8x10', '11x14', '16x20', name='size'), nullable=True),
    sa.Column('copies', sa.String(length=2), nullable=True),
    sa.Column('mail_pickup', sa.Boolean(), nullable=True),
    sa.Column('contact_no', sa.String(length=10), nullable=True),
    sa.Column('comment', sa.String(length=255), nullable=True),
    sa.Column('sub_order_no', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['sub_order_no'], ['orders.sub_order_no'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('photo_gallery',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('image_id', sa.String(length=20), nullable=True),
    sa.Column('description', sa.String(length=50), nullable=True),
    sa.Column('additional_description', sa.String(length=50), nullable=True),
    sa.Column('size', sa.Enum('8x10', '11x14', '16x20', name='size'), nullable=True),
    sa.Column('copy', sa.String(length=2), nullable=True),
    sa.Column('mail_pickup', sa.Boolean(), nullable=True),
    sa.Column('contact_no', sa.String(length=10), nullable=True),
    sa.Column('personal_use_agreement', sa.Boolean(), nullable=True),
    sa.Column('comment', sa.String(length=255), nullable=True),
    sa.Column('sub_order_no', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['sub_order_no'], ['orders.sub_order_no'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('propCard',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('borough', postgresql.ARRAY(sa.String(length=20), dimensions=1), nullable=True),
    sa.Column('block', sa.String(length=9), nullable=True),
    sa.Column('lot', sa.String(length=9), nullable=True),
    sa.Column('building_no', sa.String(length=10), nullable=True),
    sa.Column('street', sa.String(length=40), nullable=True),
    sa.Column('description', sa.String(length=40), nullable=True),
    sa.Column('certified', sa.Boolean(), nullable=True),
    sa.Column('mail_pickup', sa.Boolean(), nullable=True),
    sa.Column('comment', sa.String(length=35), nullable=True),
    sa.Column('sub_order_no', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['sub_order_no'], ['orders.sub_order_no'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sub_order_no', sa.BigInteger(), nullable=True),
    sa.Column('current_status', sa.Enum('Received', 'Processing', 'Found', 'Mailed/Pickup', 'Not_Found', 'Letter_Generated', 'Undeliverable', 'Done', name='current_status'), nullable=True),
    sa.ForeignKeyConstraint(['sub_order_no'], ['orders.sub_order_no'], ),
    sa.PrimaryKeyConstraint('id')
    )
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('status')
    op.drop_table('propCard')
    op.drop_table('photo_gallery')
    op.drop_table('photoTax')
    op.drop_table('marriageSearch')
    op.drop_table('marriageCert')
    op.drop_table('deathSearch')
    op.drop_table('deathCert')
    op.drop_table('birthSearch')
    op.drop_table('birthCert')
    op.drop_table('shipping')
    op.drop_table('orders')
    ### end Alembic commands ###
